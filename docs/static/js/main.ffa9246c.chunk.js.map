{"version":3,"sources":["component/AddCategory.js","helpers/getGifs.js","component/GifGridItem.js","component/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAU,IAFA,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAEI,uBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAe,MAMnB,UACI,mCAAOD,EAAP,OACA,uBACIQ,KAAO,OACPC,MAAUT,EACVU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,c,+BCRnBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVrB,kBAcbM,GAda,4CAAH,sDCERO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OACI,sBAAKc,UAAY,yCAAjB,UAEI,qBAAKC,IAAQf,EAAMgB,IAAQN,IAC5B,kCAAMA,EAAN,WCNEO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDhB,SAAEA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAoBvC,OAbAC,qBAAU,WACNxB,EAAUC,GACLwB,MAAM,SAAAd,GACHe,YAAW,WACPH,EAAS,CACLf,KAAMG,EACNU,SAAS,MAEd,UAEZ,CAAEpB,IAGEqB,EDjB2BK,CAAa1B,GAAjCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACI,qCACI,mCAAOpB,EAAP,OAEEoB,GAAW,0CAEb,qBAAKJ,UAAY,YAAjB,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEdzBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAE,qBAFjB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAU9B,OACI,qCACI,kDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,YCrBpC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ffa9246c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n\r\n    const handleInputChange = ( e ) =>{\r\n        setInputValue( e.target.value );\r\n    };\r\n    \r\n    const handleSubmit = ( e ) =>{\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( catg => [ inputValue, ...catg ] );\r\n            setInputValue( '' );\r\n        }\r\n    }\r\n\r\n    return(\r\n\r\n        <form onSubmit = { handleSubmit }>\r\n            <h2> { inputValue } </h2>\r\n            <input \r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifts = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=5fO9GvNpWTsqhJLBkzkGSBULgIK8sQUm`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img  => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    \r\n    // console.log( id, title, url );\r\n    \r\n    return (\r\n        <div className = \"card animate__animated animate__bounce\">\r\n            {/* { img.titule } */}\r\n            <img src = { url } alt = { title } />\r\n           <p> { title } </p> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n    \r\n    const { data: images, loading } = useFetchGif( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p> Loading </p>}\r\n\r\n            <div className = \"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key= {img.id} \r\n                            { ...img } />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from '../helpers/getGifs'\r\n\r\nexport const useFetchGif = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifts( category )\r\n            .then( img => {\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: img,\r\n                        loading: false\r\n                    })\r\n                }, 3000);\r\n            } )\r\n    }, [ category ]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./component/AddCategory\";\r\nimport { GifGrid } from \"./component/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([ 'Kimetsu No Yaiba' ]);\r\n\r\n    // const handleAdd = ( e ) => {\r\n\r\n    //     setCategories( [ 'Kimetsu No Yaiba', ...categories ] );\r\n\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2> Gif Expert App </h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            {/* <button onClick = { handleAdd }> Agregar </button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category } \r\n                        />\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}